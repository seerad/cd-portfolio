.case-study__description,.case-study__image,.intro,.proficiencies{box-shadow:0 0 25px 5px rgba(0,0,0,.2)}

/*! normalize.css v2.1.3 | MIT License | git.io/normalize */article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block}audio,canvas,video{display:inline-block}audio:not([controls]){display:none;height:0}[hidden],template{display:none}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}a{background:transparent}a:focus{outline:thin dotted}a:active,a:hover{outline:0}h1{font-size:2em;margin:.67em 0}abbr[title]{border-bottom:1px dotted}b,strong{font-weight:700}dfn{font-style:italic}hr{box-sizing:content-box;height:0}mark{background:#ff0;color:#000}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em}pre{white-space:pre-wrap}q{quotes:"\201C" "\201D" "\2018" "\2019"}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}img{border:0}svg:not(:root){overflow:hidden}figure{margin:0}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{border:0;padding:0}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0}button,input{line-height:normal}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}textarea{overflow:auto;vertical-align:top}table{border-collapse:collapse;border-spacing:0}html{font-size:10px}body{font-family:Quattrocento,serif;background:#23232a}h1,h2,h3,h4,h5,h6{font-family:Oswald,sans-serif;text-transform:uppercase;margin:0;padding:0}p{line-height:1.7;margin:0;padding:0;font-size:18px}.intro{display:grid;grid-template-columns:repeat(4,1fr);grid-template-rows:auto;grid-column-gap:0;background-image:linear-gradient(167deg,#6899a1,#7cadb5);padding:50px 100px;color:#fff;border-bottom:110px solid #1a4057}.intro__logo{grid-column:span 2}.intro__logo h1{color:hsla(0,0%,100%,.2);font-size:100px;margin-bottom:-30px;line-height:1}.intro__content{grid-column:span 2}.intro__content p{padding-left:30px;font-size:2rem}.case-study{display:grid;grid-template-columns:repeat(4,1fr);grid-template-rows:auto;grid-column-gap:20px;margin:-60px 100px 40px}.case-study__image{grid-column:span 2;height:500px;background-position:top;background-size:100% auto;transition:background-position 2s ease;margin:0 0 40px}.case-study__image:hover{background-position:bottom;transition:background-position 5s ease}.case-study__description{grid-column:span 2;background:linear-gradient(90deg,#c8c8c8,#bebebe 10%,#fff 0);margin-top:80px;position:relative;padding:20px 20px 20px 70px}.case-study__description h2{cursor:pointer;font-size:4rem}.case-study__description p{margin-left:20px}.case-study__description--rotate-90{left:10%;top:0;position:absolute;transform-origin:0 0;transform:rotate(90deg);padding-left:20px;color:#ddd;white-space:nowrap}.case-study__description--rotate-90 h2{font-size:3rem;cursor:text}.proficiencies{background:#fff;padding:50px 100px}.proficiencies__expert{display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:auto;grid-column-gap:40px;align-items:center}.proficiencies__expert img{grid-column:span 1;height:auto;max-width:100%}.proficiencies__recent{display:grid;grid-template-columns:repeat(7,1fr);grid-template-rows:auto;grid-column-gap:40px;align-items:center}.proficiencies__recent img{grid-column:span 1;height:auto;max-width:100%}@media screen and (max-width:1200px){.case-study{margin:-60px 20px 40px}.intro{padding:50px 20px}}@media screen and (max-width:900px){html{font-size:8px}.case-study,.intro{grid-template-columns:repeat(2,1fr)}.intro h1 br{clear:none}.case-study__description{background:linear-gradient(180deg,#c8c8c8,#bebebe 80px,#fff 0);margin-top:0;padding:0}.case-study__description--rotate-90{left:0;top:0;position:relative;transform-origin:0 0;transform:rotate(0deg);padding-left:20px;color:#ddd;white-space:normal;margin:20px 0}.case-study__description--rotate-90 h2{font-size:3rem;cursor:text}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
